;; Analyzed by ClojureScript 1.8.34
{:name hello-world.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {repl clojure.browser.repl, clojure.browser.repl clojure.browser.repl}, :imports nil, :defs {conn {:name hello-world.core/conn, :file "src/hello_world/core.cljs", :line 4, :column 1, :end-line 4, :end-column 14, :meta {:file "/Users/pschwarz/Documents/clojure/clojurescript/hello_world/src/hello_world/core.cljs", :line 4, :column 10, :end-line 4, :end-column 14}}, foo {:protocol-inline nil, :meta {:file "/Users/pschwarz/Documents/clojure/clojurescript/hello_world/src/hello_world/core.cljs", :line 12, :column 7, :end-line 12, :end-column 10, :arglists (quote ([a b]))}, :name hello-world.core/foo, :variadic false, :file "src/hello_world/core.cljs", :end-column 10, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, greet {:protocol-inline nil, :meta {:file "/Users/pschwarz/Documents/clojure/clojurescript/hello_world/src/hello_world/core.cljs", :line 15, :column 7, :end-line 15, :end-column 12, :arglists (quote ([text]))}, :name hello-world.core/greet, :variadic false, :file "src/hello_world/core.cljs", :end-column 12, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}}}